$date
	Sat Feb 17 22:07:51 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module gray_to_binary_convertor_testbench $end
$var wire 4 ! binary_value [3:0] $end
$var parameter 32 " N $end
$var reg 1 # clock $end
$var reg 4 $ gray_value [3:0] $end
$var reg 1 % rstn $end
$scope module design_instance $end
$var wire 4 & binary_value [3:0] $end
$var wire 1 # clk $end
$var wire 4 ' gray_value [3:0] $end
$var wire 1 % rstn $end
$var parameter 32 ( N $end
$var reg 4 ) myout [3:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 * i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 + i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100 (
b100 "
$end
#0
$dumpvars
b0 +
b0 *
b0 )
bx '
b0 &
0%
bx $
0#
b0 !
$end
#10
1#
#20
0#
1%
#30
b11111111111111111111111111111111 *
bx !
bx &
bx )
1#
#40
0#
b1 +
b0 $
b0 '
#50
b11111111111111111111111111111111 *
b0 !
b0 &
b0 )
1#
#60
0#
b10 +
b1 $
b1 '
#70
b1 !
b1 &
b1 )
b11111111111111111111111111111111 *
1#
#80
0#
b11 +
b10 $
b10 '
#90
b11 !
b11 &
b11 )
b11111111111111111111111111111111 *
1#
#100
0#
b100 +
b11 $
b11 '
#110
b10 !
b10 &
b10 )
b11111111111111111111111111111111 *
1#
#120
0#
b101 +
b100 $
b100 '
#130
b111 !
b111 &
b111 )
b11111111111111111111111111111111 *
1#
#140
0#
b110 +
b101 $
b101 '
#150
b110 !
b110 &
b110 )
b11111111111111111111111111111111 *
1#
#160
0#
b111 +
b110 $
b110 '
#170
b100 !
b100 &
b100 )
b11111111111111111111111111111111 *
1#
#180
0#
b1000 +
b111 $
b111 '
#190
b101 !
b101 &
b101 )
b11111111111111111111111111111111 *
1#
#200
0#
b1001 +
b1000 $
b1000 '
#210
b11111111111111111111111111111111 *
b1111 !
b1111 &
b1111 )
1#
#220
0#
b1010 +
b1001 $
b1001 '
#230
b1110 !
b1110 &
b1110 )
b11111111111111111111111111111111 *
1#
#240
0#
b1011 +
b1010 $
b1010 '
#250
b1100 !
b1100 &
b1100 )
b11111111111111111111111111111111 *
1#
#260
0#
b1100 +
b1011 $
b1011 '
#270
b1101 !
b1101 &
b1101 )
b11111111111111111111111111111111 *
1#
#280
0#
b1101 +
b1100 $
b1100 '
#290
b1000 !
b1000 &
b1000 )
b11111111111111111111111111111111 *
1#
#300
0#
b1110 +
b1101 $
b1101 '
#310
b1001 !
b1001 &
b1001 )
b11111111111111111111111111111111 *
1#
#320
0#
b1111 +
b1110 $
b1110 '
#330
b1011 !
b1011 &
b1011 )
b11111111111111111111111111111111 *
1#
#340
0#
b10000 +
b1111 $
b1111 '
#350
b1010 !
b1010 &
b1010 )
b11111111111111111111111111111111 *
1#
#360
0#
